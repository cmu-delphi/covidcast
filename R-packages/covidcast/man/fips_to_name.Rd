% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.R
\name{fips_to_name}
\alias{fips_to_name}
\alias{cbsa_to_name}
\title{Get county or city names from FIPS or CBSA codes}
\usage{
fips_to_name(
  code,
  ignore.case = FALSE,
  perl = FALSE,
  fixed = FALSE,
  ties_method = c("first", "all")
)

cbsa_to_name(
  code,
  ignore.case = FALSE,
  perl = FALSE,
  fixed = FALSE,
  ties_method = c("first", "all")
)
}
\arguments{
\item{code}{Vector of FIPS or CBSA codes to look up.}

\item{ignore.case, perl, fixed}{Arguments to pass to \code{grep()}, with the same
defaults as in the latter function. Hence, by default, regular expressions
are used; to match against a fixed string (no regular expressions), set
\code{fixed = TRUE}.}

\item{ties_method}{If "first", then only the first match for each code is
returned. If "all", then all matches for each code are returned.}
}
\value{
A vector of FIPS or CBSA codes if \code{ties_method} equals "first", and a
list of FIPS or CBSA codes otherwise.
}
\description{
Look up county or city names by FIPS or CBSA codes, respectively; these
functions are based on \code{grep()}, and hence allow for regular expressions.
}
\examples{
fips_to_name("42003")
cbsa_to_name("38300")
fips_to_name("4200", ties_method = "all")

# Number of counties, grouped by first two digits of FIPS: 
unlist(lapply(fips_to_name(sprintf("\%02d", 1:99), ties_method = "all"), length))

}
\seealso{
\code{\link[=name_to_fips]{name_to_fips()}}, \code{\link[=name_to_cbsa]{name_to_cbsa()}}
}
