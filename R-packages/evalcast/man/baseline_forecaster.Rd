% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/baseline.R
\name{baseline_forecaster}
\alias{baseline_forecaster}
\title{Baseline forecaster}
\usage{
baseline_forecaster(
  df,
  forecast_date,
  signals,
  incidence_period = c("epiweek", "day"),
  ahead,
  geo_type,
  symmetrize = TRUE
)
}
\arguments{
\item{df}{Data frame of the format that is returned by
\code{\link[covidcast:covidcast_signal]{covidcast::covidcast_signal()}}.}

\item{forecast_date}{Date object or string of the form "YYYY-MM-DD",
indicating date on which forecasts will be made about some period (e.g.,
epiweek). For example, if \code{forecast_date = "2020-05-11"}, \code{incidence_period = "day"}, and \code{ahead = 3}, then, we'd be making forecasts for "2020-05-14".}

\item{signals}{Tibble with columns \code{data_source} and \code{signal} that specifies
which variables from the COVIDcast API will be used by \code{forecaster}. Each
row of \code{signals} represents a separate signal, and first row is taken to be
the response. If using incidence_period "epiweek", the response should be
something for which summing daily values over an epiweek makes sense (e.g.,
counts or proportions but not log(counts) or log(proportions)). Available
data sources and signals are documented in the \href{https://cmu-delphi.github.io/delphi-epidata/api/covidcast_signals.html}{COVIDcast signal documentation}.
An optional column \code{start_day} can also be included. This can be a Date
object or string in the form "YYYY-MM-DD", indicating the earliest date of
data needed from that data source. Importantly, \code{start_day} can also be a
function (represented as a list column) that takes a forecast date and
returns a start date for model training (again, Date object or string in
the form "YYYY-MM-DD"). The latter is useful when the start date should be
computed dynamically from the forecast date (e.g., when \code{forecaster} only
trains on the most recent 4 weeks of data).}

\item{incidence_period}{String indicating the incidence period, either
"epiweek" or "day".}

\item{ahead}{Vector of (one or more) integers. How many epiweeks/days ahead
are you forecasting? If \code{incidence_period = "epiweek"} and forecast_date is
Sunday or Monday, then \code{ahead = 1} means the epiweek that includes the
forecast date; if \code{forecast_date} fall on a Tuesday through Saturday, then
it is the following epiweek. If \code{incidence_period = "day"}, then \code{ahead = 1} means the day after forecast date.}

\item{geo_type}{String indicating geographical type, one of "county", "dma",
"hrr", "msa", or "state".}

\item{symmetrize}{Should symmetrized residuals be used, or unsymmetrized
(raw) residuals? Default is \code{TRUE}, which results in the flat-line point
prediction. If \code{FALSE}, then point predictions can be increasing or
decreasing, depending on the historical trend.}
}
\value{
Data frame with columns \code{ahead}, \code{location}, \code{probs}, \code{quantiles}.
The \code{quantiles} column gives the predictive quantiles of the forecast
distribution for that location and ahead.
}
\description{
The "flat-line" forecaster, which essentially mirrors the baseline in the
\href{https://github.com/reichlab/covid19-forecast-hub}{COVID Forecast Hub}. It
augments a flat-line point prediction with a forecast distribution around
this point based on quantiles of symmetrized week-to-week residuals.
}
