% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_predictions.R
\name{get_predictions}
\alias{get_predictions}
\title{Get predictions}
\usage{
get_predictions(
  forecaster,
  name_of_forecaster,
  signals,
  forecast_dates,
  incidence_period,
  ahead,
  geo_type,
  geo_values = "*"
)
}
\arguments{
\item{forecaster}{Function that outputs a tibble with columns \code{ahead},
\code{location}, \code{probs}, \code{quantiles}. The \code{quantiles} column gives the
predictive quantiles of the forecast distribution for that location and
ahead.}

\item{name_of_forecaster}{String indicating name of the forecaster.}

\item{signals}{Tibble with columns \code{data_source} and \code{signal} that specifies
which variables from the COVIDcast API will be used by \code{forecaster}. The
first row of \code{signals} is taken to be the response. If using
incidence_period "epiweek", the response should be something for which
summing daily values over an epiweek makes sense (e.g., counts or
proportions but not log(counts) or log(proportions)). Available data
sources and signals are documented in the \href{https://cmu-delphi.github.io/delphi-epidata/api/covidcast_signals.html}{COVIDcast signal documentation}.
An optional column \code{start_day} can also be included. This can be a Date
object or string in the form "YYYY-MM-DD", indicating the earliest date of
data needed from that data source. Importantly, it can also be a function,
which takes a forecast date and returns a start date (again, Date object or
string in the form "YYYY-MM-DD"). The latter is useful when \code{forecaster}
only requires a trailing training period (e.g., it always trains on the
most recent 4 weeks of data).}

\item{forecast_dates}{Vector of Date objects (or strings of the form
"YYYY-MM-DD") indicating dates on which forecasts will be made.}

\item{incidence_period}{String indicating the incidence period, either
"epiweek" or "day".}

\item{ahead}{Vector of (one or more) integers. How many epiweeks/days ahead
are you forecasting? If \code{incidence_period = "epiweek"} and forecast_date is
Sunday or Monday, then \code{ahead = 1} means the epiweek that includes the
forecast date; if \code{forecast_date} fall on a Tuesday through Saturday, then
it is the following epiweek. If \code{incidence_period = "day"}, then \code{ahead = 1} means the day after forecast date.}

\item{geo_type}{String indicating geographical type, one of "county", "dma",
"hrr", "msa", or "state".}

\item{geo_values}{Vector or list of locations whose data will be passed to
\code{forecaster}. The default, "*", fetches all that is available in the API.}
}
\value{
List of "predictions cards", with one element per forecast date. Each
predictions card is a data frame with two columns:

\item{location}{FIPS code of the location. For counties, this is the same as
the \code{geo_value} used in the COVIDcast API.  However, for states, \code{location}
and \code{geo_value} are slightly different, in that the former is truncated to
two digits, as in "42" for Pennsylvania (whereas the latter is always five
digits, as in "42000").}
\item{forecast_distribution}{Tibble containing the predicted quantiles for
that location.}

Each predictions card has attributes that specify the exact forecasting task
that was being carried out, along with the name of the forecaster.
}
\description{
For each of the provided forecast dates, runs a forecaster using the data
that would have been available as of that given forecast date. Returns a list
of "predictions cards", where each list element corresponds to a different
forecast date. A predictions card is a data frame giving the forecast
distributions of a given forecaster for a given forecast task. A forecast
task is specified by the forecast date, ahead, response, incidence period,
and geo type (e.g., 1-epiweek-ahead death forecasting at the state level with
predictions made using the information as of September 14).
}
